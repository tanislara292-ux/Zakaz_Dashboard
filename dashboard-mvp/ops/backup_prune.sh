#!/bin/bash
# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ ClickHouse
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./backup_prune.sh [s3|local]

set -euo pipefail

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
source "$(dirname "$0")/../.env"

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
BACKUP_MODE=${1:-${BACKUP_MODE:-s3}}
LOG_FILE="/tmp/backup_prune_$(date +%Y%m%d_%H%M%S).log"

# –ü–æ–ª–∏—Ç–∏–∫–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è (–≤ –¥–Ω—è—Ö)
FULL_RETENTION_DAYS=${FULL_RETENTION_DAYS:-28}      # –ü–æ–ª–Ω—ã–µ –±—ç–∫–∞–ø—ã: 4 –Ω–µ–¥–µ–ª–∏
INCR_RETENTION_DAYS=${INCR_RETENTION_DAYS:-7}      # –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ: 7 –¥–Ω–µ–π
GOLDEN_RETENTION_MONTHS=${GOLDEN_RETENTION_MONTHS:-12}  # –ó–æ–ª–æ—Ç—ã–µ –±—ç–∫–∞–ø—ã: 1 –≥–æ–¥ (–∫–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–µ)

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

error_exit() {
    log "ERROR: $1"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ ClickHouse
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ ClickHouse"
if ! clickhouse-client --host localhost --port 8123 --query "SELECT 1" >/dev/null 2>&1; then
    error_exit "ClickHouse –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±—ç–∫–∞–ø –∑–æ–ª–æ—Ç—ã–º (–∫–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–º)
is_golden_backup() {
    local backup_name=$1
    local backup_date=$(echo "$backup_name" | sed -n 's/.*_\([0-9]\{8\)_\).*/\1/p')
    
    if [[ -z "$backup_date" ]]; then
        return 1  # –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞—Ç—É
    fi
    
    local year=${backup_date:0:4}
    local month=${backup_date:4:2}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–≤—ã–π –ª–∏ –¥–µ–Ω—å –∫–≤–∞—Ä—Ç–∞–ª–∞ (1 —è–Ω–≤–∞—Ä—è, 1 –∞–ø—Ä–µ–ª—è, 1 –∏—é–ª—è, 1 –æ–∫—Ç—è–±—Ä—è)
    if [[ "$month" == "01" || "$month" == "04" || "$month" == "07" || "$month" == "10" ]]; then
        # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã —Å—á–∏—Ç–∞–µ–º –≤—Å–µ –±—ç–∫–∞–ø—ã –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –º–µ—Å—è—Ü–∞ –∫–∞–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –∑–æ–ª–æ—Ç—ã–µ
        return 0
    fi
    
    return 1
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –±—ç–∫–∞–ø–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
log "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –±—ç–∫–∞–ø–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è..."

# –ü–æ–ª–Ω—ã–µ –±—ç–∫–∞–ø—ã —Å—Ç–∞—Ä—à–µ FULL_RETENTION_DAYS
FULL_TO_DELETE=$(clickhouse-client --host localhost --port 8123 --user backup_user --password "${CLICKHOUSE_BACKUP_USER_PASSWORD}" --format TabSeparated --query "
    SELECT backup_name 
    FROM meta.backup_runs 
    WHERE mode = 'full' 
      AND status = 'ok' 
      AND ts < now() - INTERVAL ${FULL_RETENTION_DAYS} DAY
    ORDER BY ts ASC
" 2>/dev/null || true)

# –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –±—ç–∫–∞–ø—ã —Å—Ç–∞—Ä—à–µ INCR_RETENTION_DAYS
INCR_TO_DELETE=$(clickhouse-client --host localhost --port 8123 --user backup_user --password "${CLICKHOUSE_BACKUP_USER_PASSWORD}" --format TabSeparated --query "
    SELECT backup_name 
    FROM meta.backup_runs 
    WHERE mode = 'incr' 
      AND status = 'ok' 
      AND ts < now() - INTERVAL ${INCR_RETENTION_DAYS} DAY
    ORDER BY ts ASC
" 2>/dev/null || true)

# –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ø–∏—Å–∫–∏
ALL_TO_DELETE=""
for backup in $FULL_TO_DELETE; do
    if ! is_golden_backup "$backup"; then
        ALL_TO_DELETE="${ALL_TO_DELETE}${backup}\n"
    else
        log "–ü—Ä–æ–ø—É—Å–∫ –∑–æ–ª–æ—Ç–æ–≥–æ –±—ç–∫–∞–ø–∞: $backup"
    fi
done

for backup in $INCR_TO_DELETE; do
    ALL_TO_DELETE="${ALL_TO_DELETE}${backup}\n"
done

if [[ -z "$ALL_TO_DELETE" ]]; then
    log "–ù–µ—Ç –±—ç–∫–∞–ø–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
    exit 0
fi

log "–ù–∞–π–¥–µ–Ω–æ $(echo -e "$ALL_TO_DELETE" | grep -c '^') –±—ç–∫–∞–ø–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"

# –£–¥–∞–ª–µ–Ω–∏–µ –±—ç–∫–∞–ø–æ–≤
DELETED_COUNT=0
DELETED_SIZE=0

while IFS= read -r backup_name; do
    if [[ -z "$backup_name" ]]; then
        continue
    fi
    
    log "–£–¥–∞–ª–µ–Ω–∏–µ –±—ç–∫–∞–ø–∞: $backup_name"
    
    if [[ "$BACKUP_MODE" == "local" ]]; then
        BACKUP_DIR=${BACKUP_DIR:-"/opt/clickhouse/backups"}
        BACKUP_PATH="${BACKUP_DIR}/${backup_name}"
        
        if [[ -d "$BACKUP_PATH" ]]; then
            # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
            SIZE_BYTES=$(du -sb "$BACKUP_PATH" 2>/dev/null | cut -f1 || echo "0")
            DELETED_SIZE=$((DELETED_SIZE + SIZE_BYTES))
            
            # –£–¥–∞–ª—è–µ–º –±—ç–∫–∞–ø
            rm -rf "$BACKUP_PATH" && DELETED_COUNT=$((DELETED_COUNT + 1))
            log "–£–¥–∞–ª–µ–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π –±—ç–∫–∞–ø: $backup_name ($(($SIZE_BYTES / 1024 / 1024)) MB)"
        else
            log "–ë—ç–∫–∞–ø –Ω–µ –Ω–∞–π–¥–µ–Ω: $BACKUP_PATH"
        fi
    elif [[ "$BACKUP_MODE" == "s3" ]]; then
        if ! command -v aws &> /dev/null; then
            error_exit "AWS CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å S3"
        fi
        
        if [[ -z "${S3_BUCKET:-}" ]]; then
            error_exit "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è S3_BUCKET"
        fi
        
        # –£–¥–∞–ª—è–µ–º –±—ç–∫–∞–ø –∏–∑ S3
        if aws s3 rm "s3://${S3_BUCKET}/clickhouse-backups/${backup_name}" --recursive 2>/dev/null; then
            DELETED_COUNT=$((DELETED_COUNT + 1))
            log "–£–¥–∞–ª–µ–Ω S3 –±—ç–∫–∞–ø: $backup_name"
        else
            log "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è S3 –±—ç–∫–∞–ø–∞: $backup_name"
        fi
    fi
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ meta.backup_runs
    clickhouse-client --host localhost --port 8123 --user backup_user --password "${CLICKHOUSE_BACKUP_USER_PASSWORD}" --query "
        ALTER TABLE meta.backup_runs UPDATE status = 'deleted', details = 'Deleted on $(date)' 
        WHERE backup_name = '${backup_name}'
    " 2>/dev/null || true
    
done <<< "$ALL_TO_DELETE"

log "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ $DELETED_COUNT –±—ç–∫–∞–ø–æ–≤, –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ $(($DELETED_SIZE / 1024 / 1024)) MB"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –±—ç–∫–∞–ø–æ–≤
REMAINING_COUNT=$(clickhouse-client --host localhost --port 8123 --query "
    SELECT count() FROM meta.backup_runs WHERE status = 'ok'
" 2>/dev/null || echo "0")

log "–û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤: $REMAINING_COUNT"

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª–µ—Ä—Ç–∞ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
if [[ -n "${TG_BOT_TOKEN:-}" && -n "${TG_CHAT_ID:-}" ]]; then
    curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
        -d chat_id="${TG_CHAT_ID}" \
        -d text="üßπ –û—á–∏—Å—Ç–∫–∞ –±—ç–∫–∞–ø–æ–≤ ClickHouse –∑–∞–≤–µ—Ä—à–µ–Ω–∞: —É–¥–∞–ª–µ–Ω–æ ${DELETED_COUNT} –±—ç–∫–∞–ø–æ–≤, –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ $(($DELETED_SIZE / 1024 / 1024)) MB" \
        >/dev/null 2>&1 || true
fi

exit 0